---
path:
    blob_base_dir: /media/premium/common-biscuit/
    data: main/planogram_biscuit/data/
    images: images
    raw: /mnt/common/data/raw/
    annotations: annotations
    raw_annotations: /mnt/common/data/raw/annotations
    classes: /mnt/common/data/lookups/predefined_classes.txt
    non_packet: /mnt/common/data/lookups/non_packets.txt
    project: /tf/
    packets_lookup: 'lookups/packets_lookup.csv'
    rackrow_lookup: 'lookups/rackrow_lookup.csv'
    validation_images: ''

data_path: 
    blob_base_dir: /media/premium/common-biscuit/ 
    images_dir: main/planogram_biscuit/data/raw/all_images_12Nov/ # folder for incremental images (need to check the input data stream in production)
    output_images_folder: op_annotations_new/ # sub-folder under which annotations would be stored (to be automated later on)

yolov5_train_packets:
  model_name: 'yolov5m - 642'
  weights: '../model/pretrained_yolo/yolov5m.pt'  #initial weights path
  cfg: ''  #model.yaml path
  data: '../config/data_config/packets.yaml'  #dataset.yaml path
  hyp: '../config/hyps/hyp.scratch.yaml'  #hyperparameters path
  epochs: 200
  batch_size: 8
  imgsz: 640  #train, val image size (pixels)
  rect: False #rectangular training
  resume: False  #resume most recent training
  nosave: False  #only save final checkpoint
  noval: False #only validate final epoch
  noautoanchor: False  #disable autoanchor check
  evolve:   #evolve hyperparameters for x generations
  bucket: ''  #gsutil bucket
  cache:   #--cache images in "ram" (default) or "disk"
  image_weights: False  #use weighted image selection for training
  device: ''  #cuda device, i.e. 0 or 0,1,2,3 or cpu
  multi_scale: False  #vary img-size +/- 50%%
  single_cls: False  #train multi-class data as single-class
  adam: False #use torch.optim.Adam() optimizer
  sync_bn: False  #use SyncBatchNorm, only available in DDP mode
  workers: 8  #maximum number of dataloader workers
  project: '../runs/packets/train'  #save to project/name
  name: 'new_main_exp_all_medium_642'
  exist_ok: False  #existing project/name ok, do not increment
  quad:  #quad dataloader
  linear_lr: False
  label_smoothing: 0.0  #Label smoothing epsilon
  patience: 10   #EarlyStopping patience (epochs without improvement)
  freeze: 0  #Number of layers to freeze. backbone=10, all=24
  save_period: -1  #Save checkpoint every x epochs (disabled if < 1)
  local_rank: -1  #DDP parameter, do not modify
  entity: None  #W&B: Entity
  upload_dataset: False  #W&B: Upload dataset as artifact table
  bbox_interval: -1  #W&B: Set bounding-box image logging interval
  artifact_alias: 'latest'  #W&B: Version of dataset artifact to use

yolov5_train_rackrow:
  model_name: 'yolov5s - 642'
  weights: '../model/pretrained_yolo/yolov5s.pt'  #initial weights path
  cfg: ''  #model.yaml path
  data: '../config/data_config/rackrow.yaml'  #dataset.yaml path
  hyp: '../config/hyps/hyp.scratch.yaml'  #hyperparameters path
  epochs: 200
  batch_size: 16
  imgsz: 640  #train, val image size (pixels)
  rect: False #rectangular training
  resume: False  #resume most recent training
  nosave: False  #only save final checkpoint
  noval: False #only validate final epoch
  noautoanchor: False  #disable autoanchor check
  evolve:   #evolve hyperparameters for x generations
  bucket: ''  #gsutil bucket
  cache:   #--cache images in "ram" (default) or "disk"
  image_weights: False  #use weighted image selection for training
  device: ''  #cuda device, i.e. 0 or 0,1,2,3 or cpu
  multi_scale: False  #vary img-size +/- 50%%
  single_cls: False  #train multi-class data as single-class
  adam: False #use torch.optim.Adam() optimizer
  sync_bn: False  #use SyncBatchNorm, only available in DDP mode
  workers: 8  #maximum number of dataloader workers
  project: '../runs/new_rackrow/train'  #save to project/name
  name: 'new_main_exp_all_642'
  exist_ok: False  #existing project/name ok, do not increment
  quad:  #quad dataloader
  linear_lr: False
  label_smoothing: 0.0  #Label smoothing epsilon
  patience: 10   #EarlyStopping patience (epochs without improvement)
  freeze: 0  #Number of layers to freeze. backbone=10, all=24
  save_period: -1  #Save checkpoint every x epochs (disabled if < 1)
  local_rank: -1  #DDP parameter, do not modify
  entity: None  #W&B: Entity
  upload_dataset: False  #W&B: Upload dataset as artifact table
  bbox_interval: -1  #W&B: Set bounding-box image logging interval
  artifact_alias: 'latest'  #W&B: Version of dataset artifact to use
  

yolov5_detect_packets:
  model_version: 'medium'
  weights_small: ''
  weights_medium: '/media/premium/common-biscuit/main/planogram_biscuit/runs/packets/train/new_main_exp_all_medium/weights/best.pt'   #model.pt path(s)
  imgsz: [640]
  conf_thres: 0.4  #object confidence threshold
  iou_thres: 0.5  #IOU threshold for NMS
  max_det: 1000  # maximum detections per image
  device: ''  # cuda device, i.e. 0 or 0,1,2,3 or cpu
  view_img: False  # show results
  save_txt: False  # save results to *.txt
  save_conf: False  # save confidences in --save-txt labels
  save_crop: False  # save cropped prediction boxes
  nosave: True  # do not save images/videos
  classes:  # filter by class: --class 0, or --class 0 2 3
  agnostic_nms: False  # class-agnostic NMS
  augment: False  # augmented inference
  visualize: False  # visualize features
  update: False  # update all models
  project: '../runs/packets/detect'  # save results to project/name
  name: 'new_main_exp_all_medium'  # save results to project/name
  exist_ok: False  # existing project/name ok, do not increment
  line_thickness: 3  # bounding box thickness (pixels)
  hide_labels: True  # hide labels
  hide_conf: False  # hide confidences
  half: False  # use FP16 half-precision inference


yolov5_detect_rackrow:
  model_version: 'small'
  weights_small: '/media/premium/common-biscuit/main/planogram_biscuit/runs/new_rackrow/train/main_exp_all2/weights/best.pt'   #model.pt path(s)
  weights_medium: ''
  imgsz: [640]
  conf_thres: 0.50  #object confidence threshold
  iou_thres: 0.45  #IOU threshold for NMS
  max_det: 300  # maximum detections per image
  device: ''  # cuda device, i.e. 0 or 0,1,2,3 or cpu
  view_img: False  # show results
  save_txt: False  # save results to *.txt
  save_conf: False  # save confidences in --save-txt labels
  save_crop: False  # save cropped prediction boxes
  nosave: True  # do not save images/videos
  classes:  # filter by class: --class 0, or --class 0 2 3
  agnostic_nms: False  # class-agnostic NMS
  augment: False  # augmented inference
  visualize: False  # visualize features
  update: False  # update all models
  project: '../runs/new_rackrow/detect'  # save results to project/name
  name: 'exp_all'  # save results to project/name
  exist_ok: False  # existing project/name ok, do not increment
  line_thickness: 3  # bounding box thickness (pixels)
  hide_labels: False  # hide labels
  hide_conf: False  # hide confidences
  half: False  # use FP16 half-precision inference

mlflow_logging: 
    artifacts_location: file:///media/premium/common-biscuit/main/planogram_biscuit/model_tracking/artifacts
    uri_train_valid: file:///media/premium/common-biscuit/main/planogram_biscuit/model_tracking/experiments
    port: 5050
    host: localhost
    temp_artifacts_location: /media/premium/common-biscuit/main/planogram_biscuit/model_tracking/artifacts_temp

packets_detection:
    # model_path: models/packets_yolo/models/0926_packets_all-layerstrained_110-epochs_8-batch_0.001-learning_rate_2-stage_colored.h5
    # anchors_path: model_setup/packets_yolo/0925_anchor_boxes.txt
    # classes_path: model_setup/packets_yolo/predefined_classes.txt
    # colored_model: True
    # score: 0.20  # confidence score for prediction
    # iou: 0.5  # iou threshold for prediction
    # max_boxes: 75  # max. number of packets detected in a image
    output_dir: main/planogram_biscuit/data/output/image_annotations/packets_detection/  # save json files
    # image_size: 608  # recommended 608 for predictions
    
rackrow_detection:
    # model_path: models/rack_row_yolo/models/0603_rack_row_all-layerstrained_110-epochs_4-batch_0.001-learning_rate_2-stage_colored.h5
    # anchors_path: model_setup/rack_row_yolo/0930_anchor_boxes.txt
    # classes_path: model_setup/rack_row_yolo/0924_predefined_classes.txt
    # colored_model: True
    # score: 0.20  # confidence score for prediction
    # iou: 0.5  # iou threshold for prediction
    # max_boxes: 7  # max. number of racks detected in a image
    output_dir: main/planogram_biscuit/data/output/image_annotations/rackrow_detection/  # save json files
    #image_size: 608  # recommended 608 for predictions
    
sub_brand_detection:
    model_dir: main/planogram_biscuit/model/sub_brand_classification/1021_InceptionResNetV2_0.0002LR_20Epoch_45Classes/
    input_json: main/planogram_biscuit/data/output/image_annotations/packets_detection/  # output from the packet detection model in json format
    cropped_size: 128  # to be used same as was used in training (would be automated in next iterations)
    output_dir: main/planogram_biscuit/data/output/image_annotations/sub_brand_detection/

integrated_output:
    sub_brand_output_dir: main/planogram_biscuit/data/output/image_annotations/sub_brand_detection/
    rackrow_output_dir: main/planogram_biscuit/data/output/image_annotations/rackrow_detection/
    integrated_dir: main/planogram_biscuit/data/output/image_annotations/integrated/

compliance:
    path:
        image_output: data/output/image_annotations/test_outputs
        output: data/output/compliance/location_pickles/test_loader
        output_prev_after_comparsion: main/planogram_biscuit/data/output/compliance/prev_after/
    threshold:
        packet_row_overlap_thresh: 0.7
        packet_top_row_overlap_thresh: 0.5
        missing_row_thresh: 0.8
        missing_top_row_packet_overlap_thresh: 0.7
        top_row_additional_pixels: 25
        top_row_additional_thresh_pixels: 50
        empty_row_bbox_thresh: 0.5
        blank_middle_bbox_thresh: 0.5
        blank_start_bbox_thresh: 0.5
        blank_end_bbox_thresh: 0.5
        blank_predicted_overlap_iou: 0.5 
        missing_mid_row_thresh: 2.2
